set "path", {
  bash: "/bin/bash"
  scripts:  "~/.local/bin"
  binaries: "~/.local/bin"
  profiled: "~/.local/profile.d"
  microcfg: "~/.config/micro"
}

macos ->
  set "cache_dir", "~/Library/MoondotCache"
  set "path", {
    bash:     "/opt/homebrew/bin/bash"
    brewx86:  "~/Library/Brews/brewx86"
    scripts:  "~/Library/Scripts"
    binaries: "~/Library/Binaries"
    profiled: "~/Library/profile.d"
    homebrew: "/opt/homebrew"
    microcfg: "~/Library/Application Support/Micro-Editor"
  }

repo "SleebyRhea/dotfiles"
repo "SleebyRhea/microgit-plugin"
repo "SleebyRhea/micro-moonscript"

block "Directories", ->
  needed_dirs = { var.path.scripts, var.path.binaries, var.path.profiled, var.path.microcfg}
  for _, d in ipairs needed_dirs
    file d, directory: true

block "Files to clear", ->
  clear_files = { '~/.bash_aliases' }
  for _, f in ipairs clear_files
    file f, ensure: 'absent'

block "Main RC files", ->
  template "~/.profile"
    source: '@SleebyRhea/dotfiles:env/.profile.etlua'
    environment: var.path
  file "~/.bashrc"
    source: '@SleebyRhea/dotfiles:env/.bashrc'
  file "~/.bash_profile"
    source: '@SleebyRhea/dotfiles:env/.bash_profile'

block "User profile.d", ->
  file "#{var.path.profiled}/99-history.sh"
    source: '@SleebyRhea/dotfiles:env/profiled/99-history.sh'
  file "#{var.path.profiled}/99-rvm.sh"
    source: '@SleebyRhea/dotfiles:env/profiled/99-rvm.sh'

  macos ->
    file "#{var.path.profiled}/00-shutup-macos.sh"
      source: '@SleebyRhea/dotfiles:env/profiled/00-shutup-macos.sh'
    file "#{var.path.profiled}/00-aliases.sh"
      source: '@SleebyRhea/dotfiles:env/profiled/00-aliases.sh'
    file "#{var.path.profiled}/00-utm.sh"
      source: '@SleebyRhea/dotfiles:env/profiled/00-utm.sh'
    template "#{var.path.profiled}/00-micro.sh"
      environment: var.path
      source: '@SleebyRhea/dotfiles:env/profiled/00-micro.sh.etlua'
    template "#{var.path.profiled}/10-homebrew.sh"
      environment: var.path
      source: '@SleebyRhea/dotfiles:env/profiled/10-homebrew.sh.etlua'

block "Micro Plugins", ->
  file "#{var.path.microcfg}/syntax", directory: true
  file "#{var.path.microcfg}/plug/ugit", directory: true

  file "#{var.path.microcfg}/settings.json",
    source: "@SleebyRhea/dotfiles:env/micro/settings.json"

  file "#{var.path.microcfg}/bindings.json",
    source: "@SleebyRhea/dotfiles:env/micro/bindings.json"

  file "#{var.path.microcfg}/syntax/moonscript.yaml",
    source: "@SleebyRhea/micro-moonscript:moonscript.yaml"

  file "#{var.path.microcfg}/plug/ugit/main.lua",
    source: "@SleebyRhea/microgit-plugin:main.lua"

  file "#{var.path.microcfg}/plug/ugit/repo.json",
    source: "@SleebyRhea/microgit-plugin:repo.json"

block "Lua Devel Environment", ->
  lj_repo = repo "openresty/luajit2"
    creates: { "#prefix:bin/luajit" }
    builder: ->
      env.set_var "MACOSX_DEPLOYMENT_TARGET", "12.00"
      env.file.replace_lines "Makefile",
        "^export PREFIX=.*$",
        "export PREFIX=#{env.prefix}",
        limit: 1
      env.run "make"
      env.run "make", "install"
    cleaner: ->
      env.git.clean "-f"
      env.git.reset "--hard"

  -- lua53_repo = repo "lua/lua"
  --   creates: {"#prefix:bin/lua53"}
  --   builder: ->
  --     env.set_var "MACOSX_DEPLOYMENT_TARGET", "12.00"
  --     env.run "make", "all", "test"
  --   cleaner: ->
  --     env.git.clean "-f"
  --     env.git.reset "--hard"
  --   install:
  --     { "#repo:lua", "#prefix:bin/lua53" }

  var.path.luajit = lj_repo.prefix
  --var.path.lua53 = lua53_repo.prefix

  lua_repo = repo "luarocks/luarocks"
    creates: { "#prefix:bin/luarocks", "#prefix:bin/luarocks-admin" }
    builder: ->
      env.run "sh", "configure",
        "--prefix=#{env.luajit_pfx}",
        "--with-lua=#{env.luajit_pfx}",
        "--with-lua-include=#{env.luajit_pfx}/include/luajit-2.1",
        "--with-lua-lib=#{env.luajit_pfx}/lib"
      env.run "make"
      env.run "make", "install"

      -- env.run "mv", "#{env.luajit_pfx}/bin/luarocks",
      --   "#{env.luajit_pfx}/bin/luarocks-luajit"
      -- env.run "mv", "#{env.luajit_pfx}/bin/luarocks-admin",
      --   "#{env.luajit_pfx}/bin/luarocks-admin-luajit"

      -- env.git.clean "-f"
      -- env.git.reset "--hard"
      -- env.run "sh", "configure",
      --   "--prefix=#{env.lua53_pfx}",
      --   "--with-lua=#{env.lua53_pfx}",
      --   "--with-lua-include=#{env.lua53_pfx}/include/luajit-2.1",
      --   "--with-lua-lib=#{env.lua53_pfx}/lib"
      -- env.run "make"
      -- env.run "make", "install"
      -- env.run "mv", "#{env.luajit_pfx}/bin/luarocks",
      --   "#{env.luajit_pfx}/bin/luarocks-lua53"
      -- env.run "mv", "#{env.luajit_pfx}/bin/luarocks-admin",
      --   "#{env.luajit_pfx}/bin/luarocks-admin-lua53"

    cleaner: ->
      env.git.clean "-f"
      env.git.reset "--hard"
    environment:
      "luajit_pfx": var.path.luajit
      --"lua53_pfx": var.path.lua53

  template "#{var.path.luarocks}/etc/luarocks/config-5.1.lua",
    environment: var.path
    source: '@SleebyRhea/dotfiles:env/luarocks/config-5.1_luajit.lua.etlua'
  template "#{var.path.profiled}/10-lua.sh"
    source: '@SleebyRhea/dotfiles:env/profiled/10-lua.sh.etlua'
    environment: coalesce var.path, {
      "luajit_pfx": var.path.luajit
      --"lua53_pfx": var.path.lua53
    }
  template "#{var.path.profiled}/10-luarocks.sh"
    source: '@SleebyRhea/dotfiles:env/profiled/10-luarocks.sh.etlua'
    environment: var.path

  macos ->
    template "~/.libfix"
      environment: {
        zzip_cfg: -> command("pkg-config") "zziplib", "--libs-only-L", "--cflags-only-I"
      }
      chmod: '0600'
      margin: 4
      inline: [[
        -lzzip := -<%- zzip_cfg() %> -lzzip-0
      ]]

  file "#{var.path.scripts}/library_fixer"
    source: '@SleebyRhea/dotfiles:env/scripts/library_fixer.sh'
    chmod: '0700'

  -- for lua_repo in *{lua53_repo, lj_repo}
  var.path.luarocks = lua_repo.prefix
  set 'luarocks_prefix', lua_repo.prefix
  set 'luarocks', "#{var.path.luarocks}/bin/luarocks"

  rock "moonscript"
  rock "penlight"
  rock "lua-json"
  rock "busted"
  rock "luazip"
  rock "lyaml"
  rock "etlua"
  rock "md5"

  macos ->
    rock "http"
      variable_dirs: {
        CRYPTO_DIR: "/opt/homebrew/Cellar/openssl@1.1/1.1.1q"
        OPENSSL_DIR: "/opt/homebrew/Cellar/openssl@1.1/1.1.1q"
      }

  repo "SleebyRhea/Moondot"
    creates: { "#{var.path.luarocks}/bin/moondot" }
    builder: ->
      env.del_var 'LUA_PATH'
      env.del_var 'LUA_CPATH'
      env.run "#{var.path.luarocks}/bin/luarocks", "make", "moondot-dev-1.rockspec"
    cleaner: ->
      env.git.clean "-f"
      env.git.reset "--hard"


block "External Scripts", ->
  macos ->
    repo "Bijman/srb2bld"
    file "#{var.path.scripts}/srb2bld"
      source: "@Bijman/srb2bld:srb2bld"
      chmod:  '0700'
    file "#{var.path.profiled}/10-srb2bld.sh"
      source: '@SleebyRhea/dotfiles:env/profiled/10-srb2bld.sh'
